"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.userProfilesRelations = exports.readerProfile = exports.creatorProfile = exports.walletTypeEnum = exports.userProfiles = void 0;
var pg_core_1 = require("drizzle-orm/pg-core");
var auth_1 = require("./auth");
var drizzle_orm_1 = require("drizzle-orm");
var wallet_1 = require("./wallet");
exports.userProfiles = (0, pg_core_1.pgTable)("user_profiles", {
    id: (0, pg_core_1.uuid)("id").primaryKey().defaultRandom(),
    authUserId: (0, pg_core_1.uuid)("auth_user_id")
        .notNull()
        .references(function () { return auth_1.authUsers.id; }, { onDelete: "cascade" }),
    firstName: (0, pg_core_1.text)("first_name"),
    lastName: (0, pg_core_1.text)("last_name"),
    displayName: (0, pg_core_1.text)("display_name").notNull(),
    bio: (0, pg_core_1.text)("bio"),
    avatarUrl: (0, pg_core_1.text)("avatar_url"),
    dateOfBirth: (0, pg_core_1.timestamp)("date_of_birth", { mode: "date" }),
    country: (0, pg_core_1.text)("country"),
    timezone: (0, pg_core_1.text)("timezone"),
    language: (0, pg_core_1.text)("language").notNull(),
    preferences: (0, pg_core_1.json)("preferences").notNull(), // here
    // preferences format
    createdAt: (0, pg_core_1.timestamp)("created_at", { mode: "date" }).notNull().defaultNow(),
    updatedAt: (0, pg_core_1.timestamp)("updated_at", { mode: "date" }).notNull().defaultNow(),
});
// --- Wallet type enum (admin asked: "Solana or Phantom")
exports.walletTypeEnum = (0, pg_core_1.pgEnum)("wallet_type_enum", ["solana", "phantom"]);
// --- CREATOR PROFILE ---
exports.creatorProfile = (0, pg_core_1.pgTable)("creator_profile", {
    id: (0, pg_core_1.uuid)("id").primaryKey().defaultRandom(),
    userId: (0, pg_core_1.uuid)("user_id")
        .notNull()
        .unique()
        .references(function () { return auth_1.authUsers.id; }, { onDelete: "cascade" }),
    fullName: (0, pg_core_1.text)("full_name").notNull(),
    creatorName: (0, pg_core_1.text)("creator_name").notNull(),
    phoneNumber: (0, pg_core_1.text)("phone_number"),
    bio: (0, pg_core_1.text)("bio"),
    genres: (0, pg_core_1.text)("genre").notNull(),
    walletType: (0, exports.walletTypeEnum)("wallet_type"), // 'solana' | 'phantom' (nullable until chosen)
    walletAddress: (0, pg_core_1.text)("wallet_address"), // nullable until provided
    pinHash: (0, pg_core_1.text)("pin_hash"),
    createdAt: (0, pg_core_1.timestamp)("created_at", { mode: "date" }).notNull().defaultNow(),
    updatedAt: (0, pg_core_1.timestamp)("updated_at", { mode: "date" }).notNull().defaultNow(),
});
// --- READER PROFILE ---
exports.readerProfile = (0, pg_core_1.pgTable)("reader_profile", {
    id: (0, pg_core_1.uuid)("id").primaryKey().defaultRandom(),
    userId: (0, pg_core_1.uuid)("user_id")
        .notNull()
        .unique()
        .references(function () { return auth_1.authUsers.id; }, { onDelete: "cascade" }),
    genres: (0, pg_core_1.text)("genre").notNull(),
    // 12-char app wallet ID (generated by backend logic)
    walletId: (0, pg_core_1.varchar)("wallet_id", { length: 12 }).notNull().unique(),
    pinHash: (0, pg_core_1.text)("pin_hash").notNull(),
    createdAt: (0, pg_core_1.timestamp)("created_at", { mode: "date" }).notNull().defaultNow(),
    updatedAt: (0, pg_core_1.timestamp)("updated_at", { mode: "date" }).notNull().defaultNow(),
});
exports.userProfilesRelations = (0, drizzle_orm_1.relations)(exports.userProfiles, function (_a) {
    var one = _a.one;
    return ({
        wallet: one(wallet_1.userWallets, {
            fields: [exports.userProfiles.id],
            references: [wallet_1.userWallets.userProfileId],
        }),
        authUser: one(auth_1.authUsers, {
            fields: [exports.userProfiles.authUserId],
            references: [auth_1.authUsers.id],
        }),
    });
});
