- name: Create serverless.yml
  run: |
    cat > ./lambda-packages/${{ matrix.service }}/serverless.yml << EOL
    service: nerdwork-${{ matrix.service }}

    provider:
      name: aws
      runtime: nodejs20.x
      stage: \${opt:stage, '${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' && 'prod' || 'dev' }}'}
      region: \${opt:region, '${{ secrets.AWS_REGION }}'}
      deploymentBucket:
        name: nerdwork-serverless-artifacts-us-west-2  # Your bucket name
        serverSideEncryption: AES256  # Optional: Encrypt for security
      environment:
        NODE_ENV: \${opt:stage, '${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' && 'prod' || 'dev' }}'}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        AWS_REGION: \${self:provider.region}
      iam:
        role:
          statements:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - arn:aws:ssm:\${self:provider.region}:*:parameter/nerdwork/\${self:provider.stage}/*

    functions:
      api:
        handler: dist/handler.handler
        events:
          - httpApi:
              path: /${{ matrix.service }}
              method: any
          - httpApi:
              path: /${{ matrix.service }}/{proxy+}
              method: any

    plugins:
      - serverless-offline
      - serverless-plugin-typescript

    custom:
      serverlessPluginTypescript:
        tsConfigFileLocation: './tsconfig.json'
    EOL